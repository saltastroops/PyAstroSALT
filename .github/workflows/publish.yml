name: Publish to package repository

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  check-using-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          sha_tag="$GITHUB_SHA"
          sha_main=`git rev-parse origin/main`
          echo "SHA for GitHub release: $sha_tag"
          echo "SHA for main branch:    $sha_main"
          if [ "$sha_tag" != "$sha_main" ];
          then
            echo "Only the latest commit of the main branch may be published."
            echo "Make sure the tag for the GitHub release is for that commit."
            exit 1;
          fi

  run-quality-checks-and-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PDM
        uses: pdm-project/setup-pdm@d4d1a7759495bc23245b547ccc2f4d5b0cef4cee
      - name: Setup nox
        uses: wntrblm/nox@cf82e6da59346b6f2d5c0476760a2dc77261aced
      - name: Run quality checks
        run: |
          nox -s lint
      - name: Run tests
        run: |
          nox -s test

  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PDM
        uses: pdm-project/setup-pdm@d4d1a7759495bc23245b547ccc2f4d5b0cef4cee
      - name: Setup nox
        uses: wntrblm/nox@cf82e6da59346b6f2d5c0476760a2dc77261aced
      - name: Check package version against release version
        run: |
          ref="${{ github.ref }}"
          nox -s check_version -- ${ref:10:1000}

  publish-package:
    needs:
      - "check-using-main"
      - "run-quality-checks-and-tests"
      - "check-version"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: pdm-project/setup-pdm@d4d1a7759495bc23245b547ccc2f4d5b0cef4cee
      - name: Publish to the package repository
        run: |
          pdm publish --repository https://upload.pypi.org/legacy/
